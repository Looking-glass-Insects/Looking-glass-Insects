package com.example.heyong.exercisesbase.Tools;

import android.content.Context;
import android.os.Environment;

import com.example.heyong.exercisesbase.StorageData.FilesWriter;

import java.io.File;

/**
 * Created by Heyong on 2016/9/20.
 */
public class DemoFileWriter extends FilesWriter{
    String content = "";
    {content = "{A|算法的有穷性是指（   ）。\n" +
            "A）算法程序的运行时间是有限的\n" +
            "\n" +
            "B）算法程序所处理的数据量是有限的\n" +
            "\n" +
            "C）算法程序的长度是有限的\n" +
            "\n" +
            "D）算法只能被有限的用户使用|A}\n" +
            "\n" +
            "\n" +
            "{A|对长度为n的线性表排序，在最坏情况下，比较次数不是n(n－1)/2的排序方法是（   ）。\n" +
            "A）快速排序\n" +
            "\n" +
            "B）冒泡排序\n" +
            "\n" +
            "C）直接插入排序\n" +
            "\n" +
            "D）堆排序|D}\n" +
            "\n" +
            "{A|下列关于栈的叙述正确的是（   ）。\n" +
            "A）栈按\"先进先出\"组织数据\n" +
            "\n" +
            "B）栈按\"先进后出\"组织数据\n" +
            "\n" +
            "C）只能在栈底插入数据\n" +
            "\n" +
            "D）不能删除数据|B}\n" +
            "\n" +
            "{A|一个栈的初始状态为空。现将元素1、2、3、4、5、A、B、C、D、E依次入栈，然后再依次出栈，则元素出栈的顺序是（   ）。\n" +
            "A）12345ABCDE\n" +
            "\n" +
            "B）EDCBA54321\n" +
            "\n" +
            "C）ABCDE12345\n" +
            "\n" +
            "D）54321EDCBA|B}\n" +
            "\n" +
            "{A|下列叙述中正确的是（   ）。\n" +
            "A）循环队列有队头和队尾两个指针，因此，循环队列是非线性结构\n" +
            "\n" +
            "B）在循环队列中，只需要队头指针就能反映队列中元素的动态变化情况\n" +
            "\n" +
            "C）在循环队列中，只需要队尾指针就能反映队列中元素的动态变化情况\n" +
            "\n" +
            "D）循环队列中元素的个数是由队头指针和队尾指针共同决定|D}\n" +
            "\n" +
            "{A|下列叙述中正确的是（   ）。\n" +
            "A）顺序存储结构的存储一定是连续的，链式存储结构的存储空间不一定是连续的\n" +
            "\n" +
            "B）顺序存储结构只针对线性结构，链式存储结构只针对非线性结构\n" +
            "\n" +
            "C）顺序存储结构能存储有序表，链式存储结构不能存储有序表\n" +
            "\n" +
            "D）链式存储结构比顺序存储结构节省存储空间|A}\n" +
            "\n" +
            "{A|在数据管理技术发展的三个阶段中，数据共享最好的是（   ）。\n" +
            "A）人工管理阶段\n" +
            "\n" +
            "B）文件系统阶段\n" +
            "\n" +
            "C）数据库系统阶段\n" +
            "\n" +
            "D）三个阶段相同|C}\n" +
            "\n" +
            "{A|下列叙述中正确的是（   ）。\n" +
            "A）栈是“先进先出”的线性表\n" +
            "\n" +
            "B）队列是“先进后出”的线性表\n" +
            "\n" +
            "C）循环队列是非线性结构\n" +
            "\n" +
            "D）有序线性表既可以采用顺序存储结构，也可以采用链式存储结构|D}\n" +
            "\n" +
            "{A|支持子程序调用的数据结构是（   ）。\n" +
            "A）栈\n" +
            "\n" +
            "B）树\n" +
            "\n" +
            "C）队列\n" +
            "\n" +
            "D）二叉树|A}\n" +
            "\n" +
            "{A|某二叉树有5个度为2的结点，则该二叉树中的叶子结点数是（   ）。\n" +
            "A）10\n" +
            "\n" +
            "B）8\n" +
            "\n" +
            "C）6\n" +
            "\n" +
            "D）4|C}\n" +
            "\n" +
            "{A|下列排序方法中，最坏情况下比较次数最少的是（   ）。\n" +
            "A）冒泡排序\n" +
            "\n" +
            "B）简单选择排序\n" +
            "\n" +
            "C）直接插入排序\n" +
            "\n" +
            "D）堆排序|D}\n" +
            "\n" +
            "{A|下列数据结构中，属于非线性结构的是（   ）。\n" +
            "A）循环队列\n" +
            "\n" +
            "B）带链队列\n" +
            "\n" +
            "C）二叉树\n" +
            "\n" +
            "D）带链栈|C}\n" +
            "\n" +
            "{A|下列数据结构中，能够按照“先进后出”原则存取数据的是（   ）。\n" +
            "A）循环队列\n" +
            "\n" +
            "B）栈\n" +
            "\n" +
            "C）队列\n" +
            "\n" +
            "D）二叉树|B}\n" +
            "\n" +
            "{A|对于循环队列，下列叙述中正确的是（   ）。\n" +
            "A）队头指针是固定不变的\n" +
            "\n" +
            "B）队头指针一定大于队尾指针\n" +
            "\n" +
            "C）队头指针一定小于队尾指针\n" +
            "\n" +
            "D）队头指针可以大于队尾指针，也可以小于队尾指针|D}\n" +
            "\n" +
            "{A|算法的空间复杂度是指（   ）。\n" +
            "A）算法在执行过程中所需要的计算机存储空间\n" +
            "\n" +
            "B）算法所处理的数据量\n" +
            "\n" +
            "C）算法程序中的语句或指令条数\n" +
            "\n" +
            "D）算法在执行过程中所需要的临时工作单元数|A}\n" +
            "\n" +
            "{A|下列叙述中正确的是（   ）。\n" +
            "A）线性表的链式存储结构与顺序存储结构所需要的存储空间是相同的\n" +
            "\n" +
            "B）线性表的链式存储结构所需要的存储空间一般要多于顺序存储结构\n" +
            "\n" +
            "C）线性表的链式存储结构所需要的存储空间一般要少于顺序存储结构\n" +
            "\n" +
            "D）线性表的链式存储结构所需要的存储空间与顺序存储结构没有任何关系|B}\n" +
            "\n" +
            "{B|题目：一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在 第10次落地时，共经过多少米？第10次反弹多高？|\n" +
            "(略)}\n" +
            "\n" +
            "{B|static有什么用途,请至少说明两种| 1)在函数体一个被声明为静态的变量在这一函数被调用过程中维持其值不变。\n" +
            "2) 在模块内但在函数体外,一个被声明为静态的变量可以被模块内所用函数访问,但\n" +
            "不能被模块外其它函数访问。它是一个本地的全局变量。 \n" +
            "\n" +
            "3) 在模块内一个被声明为静态的函数只可被这一模块内的其它函数调用。那就是这个\n" +
            "函数被限制在声明它的模块的本地范围内使用 }\n" +
            "\n" +
            "{B|什么函数不能声明为虚函数?|constructor函数不能声明为虚函数。}\n" +
            "{B|冒泡排序算法的时间复杂度是什么?|时间复杂度是O(n^2)。}\n" +
            "{B|不能做switch()的参数类型是|switch的参数不能为实型。}\n";
    }
    String fileName = "demo.txt";
    public DemoFileWriter(Context contxt) {
        super(contxt);
    }

    public void write(){
        writeFile(fileName,this.content);
        writeFile(fileName, Environment.getExternalStorageDirectory().getAbsolutePath(),content);
    }
}
